<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize

/*
    Execute only once at game start
*/

randomize();

//init inventory system and load database
ex_init();
ex_db_load("inv_armor.csv","inv_food.csv","inv_potions.csv","inv_weapons.csv");

//create panel events
enum panel_events {
    init = 0,
    inventory_changed = 1,
    slot_left_pressed = 2,
    slot_right_pressed = 3,
    slot_updated = 4,
    cleanup = 15
}

//create slot events
enum slot_events {
    init = 0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create crafting recipes

global.crafting_recipes = ds_list_create();

//fire sword = iron sword + fire arrow x 3
craft_add_recipe("weapon_flame_sword",1,"weapon_iron_sword","weapon_fire_arrow","weapon_fire_arrow","weapon_fire_arrow");
//health potion = cheese + bread
craft_add_recipe("potion_health",2,"food_cheese","food_bread");
//stamina potion = cheese + carrot
craft_add_recipe("potion_mana",2,"food_carrot","food_cheese");
//mana potion = bread + fish
craft_add_recipe("potion_stamina",2,"food_bread","food_fish");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy inventories

ex_inv_destroy(mouse_inv);
ex_inv_destroy(bag_inv);
ex_inv_destroy(toolbar_inv);
ex_inv_destroy(crafting_inv);
ex_inv_destroy(equipment_inv);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create inventories

//get all the items keys to generate some random items later
var db_keys = ex_db_keys();

//items held with the mouse are kept in an inventory with a single slot
mouse_inv = ex_inv_create(1);
inv_panel_create(mouse_inv,obj_inv_mouse,mouse_x,mouse_y);

//inventory representing player bag, initialized with random items
bag_inv = ex_inv_create(30);
for(var i=0; i&lt;30; i++) {
    var item = choose("",db_keys[| irandom(ds_list_size(db_keys)-1)]);
    ex_inv_add_slot(bag_inv,item,irandom(64),i);
}
bag_panel = inv_panel_create(bag_inv,obj_inv_bag,96,96);


//inventory representing player toolbar, initialized with random items
toolbar_inv = ex_inv_create(10);
for(var i=0; i&lt;10; i++) {
    var item = choose("",db_keys[| irandom(ds_list_size(db_keys)-1)]);
    ex_inv_add_slot(toolbar_inv,item,irandom(64),i);
}
toolbar_panel = inv_panel_create(toolbar_inv,obj_inv_toolbar,264,504);

//create a crafting table inventory
crafting_inv = ex_inv_create(5);
crafting_panel = inv_panel_create(crafting_inv,obj_inv_crafting,384,96);

//create a crafting table inventory
equipment_inv = ex_inv_create(5);
equipment_panel = inv_panel_create(equipment_inv,obj_inv_equipment,720,96);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw info box
draw_sprite(spr_inv_info,0,384,216);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///save bag inventory to file

var path = get_save_filename("inventory files|*","");

if(path != "") {
    var f = file_text_open_write(path);
    file_text_write_string(f,ex_inv_write(bag_inv));
    file_text_close(f);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///restart room

room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load bag inventory from file

var path = get_open_filename("inventory files|*","");

if(path != "") {

    //destroy the current panel and its inventory first
    with(bag_panel) {instance_destroy();}
    ex_inv_destroy(bag_inv);
    
    //read the data from the file
    var f = file_text_open_read(path);
    bag_inv = ex_inv_read(file_text_read_string(f));
    file_text_close(f);
    
    //create the new panel
    bag_panel = inv_panel_create(bag_inv,obj_inv_bag,96,96);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
